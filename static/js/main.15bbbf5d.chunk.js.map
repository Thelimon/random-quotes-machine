{"version":3,"sources":["styles/QuotesStyled.jsx","components/Quotes.jsx","hooks/useQuotesApi.jsx","components/Main.jsx","index.js"],"names":["ChangeColor","MainContainer","styled","main","QuoteSection","section","FinalSection","article","QuoteH2Styled","h2","QuotePStyled","p","IconStyled","i","ButtonStyled","button","Quotes","data","url","useState","error","state","setstate","useEffect","fetch","then","resp","json","quotes","useQuotesApi","color","setcolor","phrase","setphrase","changeQuotePhrase","newQuote","Math","floor","random","length","console","log","changeQuoteColor","style","background","quote","author","href","onClick","Main","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kNAEMA,EAAc,CAClB,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAGIC,EAAgBC,UAAOC,KAAV,wHAObC,EAAeF,UAAOG,QAAV,0IAOZC,EAAeJ,UAAOK,QAAV,kDAIZC,EAAgBN,UAAOO,GAAV,oDAIbC,EAAeR,UAAOS,EAAV,mDAIZC,EAAaV,UAAOW,EAAV,qGAOVC,EAAeZ,UAAOa,OAAV,sL,cCcHC,EAjEA,WACX,IACOC,ECNiB,SAACC,GAAS,IAAD,EAEPC,mBAAS,CAC3BF,KAAM,GACNG,MAAO,OAJkB,mBAE1BC,EAF0B,KAEnBC,EAFmB,KAkBjC,OAVAC,qBAAU,WACNC,MAAMN,GACLO,MAAK,SAAAC,GAAI,OAAEA,EAAKC,UAChBF,MAAK,SAAAR,GACFK,EAAS,CACLF,MAAO,KACPH,KAAMA,EAAKW,cAGpB,CAACV,IACGG,EDbQQ,CAAa,0IACrBZ,KAFU,EAISE,mBAAS,WAJlB,mBAIVW,EAJU,KAIHC,EAJG,OAKWZ,mBAAS,GALpB,mBAKVa,EALU,KAKFC,EALE,KAYXC,EAAoB,WACtB,IAAIC,EAAWC,KAAKC,MAAMD,KAAKE,SAAWrB,EAAKsB,QAE/C,OADAC,QAAQC,IAAIN,GACLlB,EAAKkB,IAGVO,EAAmB,WACrB,IAAIC,EAAQP,KAAKC,MAAMD,KAAKE,SAAWtC,EAAYuC,QAEnD,OADAC,QAAQC,IAAIE,GACL3C,EAAY2C,IAGvB,OACI,mCACI,cAAC1C,EAAD,CAAe0C,MAAO,CAACC,WAAYd,GAAnC,SACI,eAAC1B,EAAD,WAEI,eAACI,EAAD,CAAemC,MAAO,CAACb,MAAOA,GAA9B,UACI,cAAC,IAAD,IADJ,UAEQE,GAAUA,EAAOa,UAGzB,cAACnC,EAAD,CAAciC,MAAO,CAACb,MAAOA,GAA7B,mBACQE,GAAUA,EAAOc,UAGzB,eAACxC,EAAD,WACI,mBAAGyC,KAAM,uBAAT,SACI,cAACnC,EAAD,UACI,cAAC,IAAD,QAIR,mBAAGmC,KAAK,0BAAR,SACI,cAACnC,EAAD,UACI,cAAC,IAAD,QAIR,cAACE,EAAD,CACI6B,MAAO,CAACC,WAAYd,GACpBkB,QAAS,kBA7C7BjB,EAASW,UACTT,EAAUC,MA0CM,kC,QE5CTe,EATF,WACT,OACI,qCACI,cAAC,YAAD,IACA,cAAC,EAAD,QCHZC,IAASC,OACP,cAAC,IAAMC,WAAP,UAEE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.15bbbf5d.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nconst ChangeColor = [\n  '#a871be',\n  '#2471b4',\n  '#AC4818',\n  '#0F471C',\n  '#852D6D',\n  '#30EA25',\n  '#A2866C',\n  '#38240A',\n  '#EB5965',\n  '#991B52',\n  '#490ECE',\n  '#2A98D3',\n  '#23BA5C',\n  '#21230D',\n  '#AB7A7C',\n  '#003a34',\n  '#007459',\n  '#40A69A',\n  '#5a5a57'\n];\n\nconst MainContainer = styled.main`\n    display:flex;\n    justify-content:center;\n    align-items:center;\n    height:100vh;\n`\n\nconst QuoteSection = styled.section`\n    width: 28.75rem;\n    padding: 2.5rem 3.75rem;\n    border-radius: 1rem;\n    background-color: #FFFFFF;\n`\n\nconst FinalSection = styled.article`\n    display:flex;   \n`\n\nconst QuoteH2Styled = styled.h2`\n    text-align:center;\n`\n\nconst QuotePStyled = styled.p`\n    text-align:right;\n`\n\nconst IconStyled = styled.i`\n  font-size: 2.3rem;\n  &&:nth-child(1){\n    margin-right: .5rem;\n  }\n`\n\nconst ButtonStyled = styled.button`\n    height: 2.2rem;\n    width: 6.5rem;\n    margin-left: auto;\n    border-radius: .4rem;\n    border:none;\n    color: #F0F0F0; \n    cursor: pointer;\n`\n\nexport {ChangeColor, MainContainer, QuoteSection, FinalSection, QuoteH2Styled, QuotePStyled, ButtonStyled,\n  IconStyled\n}","import { useState } from 'react'\nimport {useQuotesApi} from '../hooks/useQuotesApi.jsx';\nimport { MainContainer, QuoteSection, FinalSection, QuoteH2Styled, QuotePStyled, IconStyled, ButtonStyled, ChangeColor} \n        from '../styles/QuotesStyled.jsx';      \nimport { FaTwitterSquare, FaTumblrSquare, FaQuoteLeft } from 'react-icons/fa';\n\nconst Quotes = () => {\n    const quotes = useQuotesApi('https://gist.githubusercontent.com/camperbot/5a022b72e96c4c9585c32bf6a75f62d9/raw/e3c6895ce42069f0ee7e991229064f167fe8ccdc/quotes.json');\n    const {data} = quotes;\n\n    const [color, setcolor] = useState('#a871be');\n    const [phrase, setphrase] = useState(0);\n    \n    const handleClick = () =>{\n        setcolor(changeQuoteColor());\n        setphrase(changeQuotePhrase());\n    }\n\n    const changeQuotePhrase = () =>{\n        let newQuote = Math.floor(Math.random() * data.length);\n        console.log(newQuote);\n        return data[newQuote];\n    }\n\n    const changeQuoteColor = () =>{\n        let style = Math.floor(Math.random() * ChangeColor.length);\n        console.log(style);\n        return ChangeColor[style];\n    }\n    \n    return (\n        <>\n            <MainContainer style={{background: color}}>\n                <QuoteSection>\n\n                    <QuoteH2Styled style={{color: color}}> \n                        <FaQuoteLeft />\n                        {`${phrase && phrase.quote}`}\n                     </QuoteH2Styled>\n\n                    <QuotePStyled style={{color: color}}> \n                        {`${phrase && phrase.author}`} \n                    </QuotePStyled>\n\n                    <FinalSection>\n                        <a href={\"https://twitter.com/\"}>\n                            <IconStyled>\n                                <FaTwitterSquare />\n                            </IconStyled>\n                        </a>\n\n                        <a href=\"https://www.tumblr.com/\">\n                            <IconStyled>\n                                <FaTumblrSquare />\n                            </IconStyled>\n                        </a>\n\n                        <ButtonStyled \n                            style={{background: color}}\n                            onClick={() => handleClick()}\n                            >\n                                New quote\n                        </ButtonStyled>\n                    </FinalSection>\n                </QuoteSection>\n            </MainContainer>\n  \n        </>\n    )\n}\n\nexport default Quotes\n        ","import {useState, useEffect} from 'react'\n\nexport const useQuotesApi = (url) => {\n   \n    const [state, setstate] = useState({\n            data: [],\n            error: null\n        }\n    )\n\n    useEffect(() => {\n        fetch(url)\n        .then(resp=>resp.json())\n        .then(data=>{\n            setstate({\n                error: null,\n                data: data.quotes\n            })\n        })\n    }, [url])\n    return state;\n}\n","import Quotes from './Quotes';\nimport {Normalize} from 'styled-normalize';\n\n\nconst Main = () => {\n    return (\n        <>\n            <Normalize />\n            <Quotes />\n        </>\n    )\n}\n\nexport default Main;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Main from './components/Main';\n\n\nReactDOM.render(\n  <React.StrictMode>\n  \n    <Main />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}